<?xml version="1.0" encoding="UTF-8"?>
<library xmlns="urn:hl7-org:elm:r1" xmlns:t="urn:hl7-org:elm-types:r1" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:fhir="http://hl7.org/fhir" xmlns:a="urn:hl7-org:cql-annotations:r1">
   <identifier id="COL_FHIR" version="1.0.0"/>
   <schemaIdentifier id="urn:hl7-org:elm" version="r1"/>
   <usings>
      <def localIdentifier="System" uri="urn:hl7-org:elm-types:r1"/>
      <def localIdentifier="FHIR" uri="http://hl7.org/fhir" version="3.0.0"/>
   </usings>
   <parameters>
      <def name="Product Line" accessLevel="Public">
         <parameterTypeSpecifier name="t:String" xsi:type="NamedTypeSpecifier"/>
      </def>
      <def name="Measurement Period" accessLevel="Public">
         <parameterTypeSpecifier xsi:type="IntervalTypeSpecifier">
            <pointType name="t:DateTime" xsi:type="NamedTypeSpecifier"/>
         </parameterTypeSpecifier>
      </def>
   </parameters>
   <valueSets>
      <def name="Colonoscopy Value Set" id="urn:oid:2.16.840.1.113883.3.464.1004.1064.29" accessLevel="Public"/>
      <def name="Colorectal Cancer Value Set" id="urn:oid:2.16.840.1.113883.3.464.1004.1065.32" accessLevel="Public"/>
      <def name="CT Colonography Value Set" id="urn:oid:2.16.840.1.113883.3.464.1004.1421.34" accessLevel="Public"/>
      <def name="FIT-DNA Value Set" id="urn:oid:2.16.840.1.113883.3.464.1004.1420.35" accessLevel="Public"/>
      <def name="Flexible Sigmoidoscopy Value Set" id="urn:oid:2.16.840.1.113883.3.464.1004.1102.38" accessLevel="Public"/>
      <def name="FOBT Value Set" id="urn:oid:2.16.840.1.113883.3.464.1004.1093.41" accessLevel="Public"/>
      <def name="Total Colectomy Value Set" id="urn:oid:2.16.840.1.113883.3.464.1004.1250.44" accessLevel="Public"/>
      <def name="Hospice Value Set" id="TODO" accessLevel="Public"/>
      <def name="Encounter Inpatient" id="urn:oid:2.16.840.1.113883.3.666.5.307" version="urn:hl7:version:eCQM%20Update%202017-05-05" accessLevel="Public"/>
      <def name="Discharged to Home for Hospice Care" id="urn:oid:2.16.840.1.113883.3.117.1.7.1.209" version="urn:hl7:version:eCQM%20Update%202017-05-05" accessLevel="Public"/>
      <def name="Discharged to Health Care Facility for Hospice Care" id="urn:oid:2.16.840.1.113883.3.117.1.7.1.207" version="urn:hl7:version:eCQM%20Update%202017-05-05" accessLevel="Public"/>
      <def name="Hospice care ambulatory" id="urn:oid:2.16.840.1.113762.1.4.1108.15" version="urn:hl7:version:eCQM%20Update%202017-05-05" accessLevel="Public"/>
      <def name="X Commercial Coverage Value Set" id="TODO" accessLevel="Public"/>
      <def name="X Medicaid Coverage Value Set" id="TODO" accessLevel="Public"/>
      <def name="X Medicare Coverage Value Set" id="TODO" accessLevel="Public"/>
      <def name="X Institutional SNP Value Set" id="TODO" accessLevel="Public"/>
      <def name="X Long-Term in Institution Value Set" id="TODO" accessLevel="Public"/>
   </valueSets>
   <statements>
      <def name="First Predecessor Year" context="Patient" accessLevel="Public">
         <expression lowClosed="true" highClosed="false" xsi:type="Interval">
            <low xsi:type="Subtract">
               <operand xsi:type="Start">
                  <operand name="Measurement Period" xsi:type="ParameterRef"/>
               </operand>
               <operand value="1" unit="year" xsi:type="Quantity"/>
            </low>
            <high xsi:type="Start">
               <operand name="Measurement Period" xsi:type="ParameterRef"/>
            </high>
         </expression>
      </def>
      <def name="Second Predecessor Year" context="Patient" accessLevel="Public">
         <expression lowClosed="true" highClosed="false" xsi:type="Interval">
            <low xsi:type="Subtract">
               <operand xsi:type="Start">
                  <operand name="Measurement Period" xsi:type="ParameterRef"/>
               </operand>
               <operand value="2" unit="years" xsi:type="Quantity"/>
            </low>
            <high xsi:type="Subtract">
               <operand xsi:type="Start">
                  <operand name="Measurement Period" xsi:type="ParameterRef"/>
               </operand>
               <operand value="1" unit="year" xsi:type="Quantity"/>
            </high>
         </expression>
      </def>
      <def name="Third Predecessor Quarter" context="Patient" accessLevel="Public">
         <expression lowClosed="true" highClosed="false" xsi:type="Interval">
            <low xsi:type="Subtract">
               <operand xsi:type="Subtract">
                  <operand xsi:type="Start">
                     <operand name="Measurement Period" xsi:type="ParameterRef"/>
                  </operand>
                  <operand value="2" unit="years" xsi:type="Quantity"/>
               </operand>
               <operand value="3" unit="months" xsi:type="Quantity"/>
            </low>
            <high xsi:type="Subtract">
               <operand xsi:type="Start">
                  <operand name="Measurement Period" xsi:type="ParameterRef"/>
               </operand>
               <operand value="2" unit="years" xsi:type="Quantity"/>
            </high>
         </expression>
      </def>
      <def name="Lookback Interval Two More Years" context="Patient" accessLevel="Public">
         <expression lowClosed="true" highClosed="false" xsi:type="Interval">
            <low xsi:type="Subtract">
               <operand xsi:type="Start">
                  <operand name="Measurement Period" xsi:type="ParameterRef"/>
               </operand>
               <operand value="2" unit="years" xsi:type="Quantity"/>
            </low>
            <high xsi:type="End">
               <operand name="Measurement Period" xsi:type="ParameterRef"/>
            </high>
         </expression>
      </def>
      <def name="Lookback Interval Four More Years" context="Patient" accessLevel="Public">
         <expression lowClosed="true" highClosed="false" xsi:type="Interval">
            <low xsi:type="Subtract">
               <operand xsi:type="Start">
                  <operand name="Measurement Period" xsi:type="ParameterRef"/>
               </operand>
               <operand value="4" unit="years" xsi:type="Quantity"/>
            </low>
            <high xsi:type="End">
               <operand name="Measurement Period" xsi:type="ParameterRef"/>
            </high>
         </expression>
      </def>
      <def name="Lookback Interval Nine More Years" context="Patient" accessLevel="Public">
         <expression lowClosed="true" highClosed="false" xsi:type="Interval">
            <low xsi:type="Subtract">
               <operand xsi:type="Start">
                  <operand name="Measurement Period" xsi:type="ParameterRef"/>
               </operand>
               <operand value="9" unit="years" xsi:type="Quantity"/>
            </low>
            <high xsi:type="End">
               <operand name="Measurement Period" xsi:type="ParameterRef"/>
            </high>
         </expression>
      </def>
      <def name="Patient" context="Patient">
         <expression xsi:type="SingletonFrom">
            <operand dataType="fhir:Patient" xsi:type="Retrieve"/>
         </expression>
      </def>
      <def name="Is Age 51 to 75 at End" context="Patient" accessLevel="Public">
         <expression xsi:type="And">
            <operand xsi:type="GreaterOrEqual">
               <operand precision="Year" xsi:type="CalculateAgeAt">
                  <operand path="birthDate.value" xsi:type="Property">
                     <source name="Patient" xsi:type="ExpressionRef"/>
                  </operand>
                  <operand xsi:type="End">
                     <operand name="Measurement Period" xsi:type="ParameterRef"/>
                  </operand>
               </operand>
               <operand valueType="t:Integer" value="51" xsi:type="Literal"/>
            </operand>
            <operand xsi:type="LessOrEqual">
               <operand precision="Year" xsi:type="CalculateAgeAt">
                  <operand path="birthDate.value" xsi:type="Property">
                     <source name="Patient" xsi:type="ExpressionRef"/>
                  </operand>
                  <operand xsi:type="End">
                     <operand name="Measurement Period" xsi:type="ParameterRef"/>
                  </operand>
               </operand>
               <operand valueType="t:Integer" value="75" xsi:type="Literal"/>
            </operand>
         </expression>
      </def>
      <def name="PeriodToIntervalOfDT" context="Patient" accessLevel="Public" xsi:type="FunctionDef">
         <expression lowClosed="true" highClosed="true" xsi:type="Interval">
            <low path="value" xsi:type="Property">
               <source path="start" xsi:type="Property">
                  <source name="value" xsi:type="OperandRef"/>
               </source>
            </low>
            <high path="value" xsi:type="Property">
               <source path="end" xsi:type="Property">
                  <source name="value" xsi:type="OperandRef"/>
               </source>
            </high>
         </expression>
         <operand name="value">
            <operandTypeSpecifier name="fhir:Period" xsi:type="NamedTypeSpecifier"/>
         </operand>
      </def>
      <def name="CodingToCode" context="Patient" accessLevel="Public" xsi:type="FunctionDef">
         <expression classType="t:Code" xsi:type="Instance">
            <element name="code">
               <value path="value" xsi:type="Property">
                  <source path="code" xsi:type="Property">
                     <source name="coding" xsi:type="OperandRef"/>
                  </source>
               </value>
            </element>
            <element name="system">
               <value path="value" xsi:type="Property">
                  <source path="system" xsi:type="Property">
                     <source name="coding" xsi:type="OperandRef"/>
                  </source>
               </value>
            </element>
            <element name="version">
               <value path="value" xsi:type="Property">
                  <source path="version" xsi:type="Property">
                     <source name="coding" xsi:type="OperandRef"/>
                  </source>
               </value>
            </element>
            <element name="display">
               <value path="value" xsi:type="Property">
                  <source path="display" xsi:type="Property">
                     <source name="coding" xsi:type="OperandRef"/>
                  </source>
               </value>
            </element>
         </expression>
         <operand name="coding">
            <operandTypeSpecifier name="fhir:Coding" xsi:type="NamedTypeSpecifier"/>
         </operand>
      </def>
      <def name="ChoiceToIntervalOfDT" context="Patient" accessLevel="Public" xsi:type="FunctionDef">
         <expression xsi:type="If">
            <condition asType="t:Boolean" xsi:type="As">
               <operand xsi:type="Is">
                  <operand name="value" xsi:type="OperandRef"/>
                  <isTypeSpecifier name="fhir:dateTime" xsi:type="NamedTypeSpecifier"/>
               </operand>
               <asTypeSpecifier name="t:Boolean" xsi:type="NamedTypeSpecifier"/>
            </condition>
            <then lowClosed="true" highClosed="true" xsi:type="Interval">
               <low path="value" xsi:type="Property">
                  <source name="value" xsi:type="OperandRef"/>
               </low>
               <high path="value" xsi:type="Property">
                  <source name="value" xsi:type="OperandRef"/>
               </high>
            </then>
            <else lowClosed="true" highClosed="true" xsi:type="Interval">
               <low path="value" xsi:type="Property">
                  <source path="start" xsi:type="Property">
                     <source name="value" xsi:type="OperandRef"/>
                  </source>
               </low>
               <high path="value" xsi:type="Property">
                  <source path="end" xsi:type="Property">
                     <source name="value" xsi:type="OperandRef"/>
                  </source>
               </high>
            </else>
         </expression>
         <operand name="value">
            <operandTypeSpecifier xsi:type="ChoiceTypeSpecifier">
               <type name="fhir:dateTime" xsi:type="NamedTypeSpecifier"/>
               <type name="fhir:Period" xsi:type="NamedTypeSpecifier"/>
            </operandTypeSpecifier>
         </operand>
      </def>
      <def name="Is In Hospice" context="Patient" accessLevel="Public">
         <expression xsi:type="Or">
            <operand xsi:type="Or">
               <operand xsi:type="Or">
                  <operand xsi:type="Exists">
                     <operand xsi:type="Query">
                        <source alias="Enc">
                           <expression dataType="fhir:Encounter" codeProperty="type" xsi:type="Retrieve">
                              <codes name="Hospice Value Set" xsi:type="ValueSetRef"/>
                           </expression>
                        </source>
                        <where xsi:type="And">
                           <operand xsi:type="In">
                              <operand path="value" xsi:type="Property">
                                 <source path="status" scope="Enc" xsi:type="Property"/>
                              </operand>
                              <operand xsi:type="List">
                                 <element valueType="t:String" value="planned" xsi:type="Literal"/>
                                 <element valueType="t:String" value="arrived" xsi:type="Literal"/>
                                 <element valueType="t:String" value="triaged" xsi:type="Literal"/>
                                 <element valueType="t:String" value="in-progress" xsi:type="Literal"/>
                                 <element valueType="t:String" value="onleave" xsi:type="Literal"/>
                                 <element valueType="t:String" value="finished" xsi:type="Literal"/>
                              </operand>
                           </operand>
                           <operand xsi:type="Overlaps">
                              <operand name="PeriodToIntervalOfDT" xsi:type="FunctionRef">
                                 <operand path="period" scope="Enc" xsi:type="Property"/>
                              </operand>
                              <operand name="Measurement Period" xsi:type="ParameterRef"/>
                           </operand>
                        </where>
                     </operand>
                  </operand>
                  <operand xsi:type="Exists">
                     <operand xsi:type="Query">
                        <source alias="DischargeHospice">
                           <expression dataType="fhir:Encounter" codeProperty="type" xsi:type="Retrieve">
                              <codes name="Encounter Inpatient" xsi:type="ValueSetRef"/>
                           </expression>
                        </source>
                        <where xsi:type="And">
                           <operand xsi:type="And">
                              <operand xsi:type="In">
                                 <operand path="value" xsi:type="Property">
                                    <source path="status" scope="DischargeHospice" xsi:type="Property"/>
                                 </operand>
                                 <operand xsi:type="List">
                                    <element valueType="t:String" value="planned" xsi:type="Literal"/>
                                    <element valueType="t:String" value="arrived" xsi:type="Literal"/>
                                    <element valueType="t:String" value="triaged" xsi:type="Literal"/>
                                    <element valueType="t:String" value="in-progress" xsi:type="Literal"/>
                                    <element valueType="t:String" value="onleave" xsi:type="Literal"/>
                                    <element valueType="t:String" value="finished" xsi:type="Literal"/>
                                 </operand>
                              </operand>
                              <operand xsi:type="Or">
                                 <operand xsi:type="InValueSet">
                                    <code name="CodingToCode" xsi:type="FunctionRef">
                                       <operand xsi:type="SingletonFrom">
                                          <operand path="coding" xsi:type="Property">
                                             <source path="dischargeDisposition" xsi:type="Property">
                                                <source path="hospitalization" scope="DischargeHospice" xsi:type="Property"/>
                                             </source>
                                          </operand>
                                       </operand>
                                    </code>
                                    <valueset name="Discharged to Home for Hospice Care"/>
                                 </operand>
                                 <operand xsi:type="InValueSet">
                                    <code name="CodingToCode" xsi:type="FunctionRef">
                                       <operand xsi:type="SingletonFrom">
                                          <operand path="coding" xsi:type="Property">
                                             <source path="dischargeDisposition" xsi:type="Property">
                                                <source path="hospitalization" scope="DischargeHospice" xsi:type="Property"/>
                                             </source>
                                          </operand>
                                       </operand>
                                    </code>
                                    <valueset name="Discharged to Health Care Facility for Hospice Care"/>
                                 </operand>
                              </operand>
                           </operand>
                           <operand xsi:type="In">
                              <operand xsi:type="End">
                                 <operand name="PeriodToIntervalOfDT" xsi:type="FunctionRef">
                                    <operand path="period" scope="DischargeHospice" xsi:type="Property"/>
                                 </operand>
                              </operand>
                              <operand name="Measurement Period" xsi:type="ParameterRef"/>
                           </operand>
                        </where>
                     </operand>
                  </operand>
               </operand>
               <operand xsi:type="Exists">
                  <operand xsi:type="Query">
                     <source alias="HospiceOrder">
                        <expression dataType="fhir:ProcedureRequest" codeProperty="code" xsi:type="Retrieve">
                           <codes name="Hospice care ambulatory" xsi:type="ValueSetRef"/>
                        </expression>
                     </source>
                     <where xsi:type="And">
                        <operand xsi:type="In">
                           <operand path="value" xsi:type="Property">
                              <source path="status" scope="HospiceOrder" xsi:type="Property"/>
                           </operand>
                           <operand xsi:type="List">
                              <element valueType="t:String" value="active" xsi:type="Literal"/>
                              <element valueType="t:String" value="completed" xsi:type="Literal"/>
                           </operand>
                        </operand>
                        <operand xsi:type="In">
                           <operand path="value" xsi:type="Property">
                              <source path="authoredOn" scope="HospiceOrder" xsi:type="Property"/>
                           </operand>
                           <operand name="Measurement Period" xsi:type="ParameterRef"/>
                        </operand>
                     </where>
                  </operand>
               </operand>
            </operand>
            <operand xsi:type="Exists">
               <operand xsi:type="Query">
                  <source alias="HospicePerformed">
                     <expression dataType="fhir:Procedure" codeProperty="code" xsi:type="Retrieve">
                        <codes name="Hospice care ambulatory" xsi:type="ValueSetRef"/>
                     </expression>
                  </source>
                  <where xsi:type="And">
                     <operand xsi:type="Equal">
                        <operand path="value" xsi:type="Property">
                           <source path="status" scope="HospicePerformed" xsi:type="Property"/>
                        </operand>
                        <operand valueType="t:String" value="completed" xsi:type="Literal"/>
                     </operand>
                     <operand xsi:type="Overlaps">
                        <operand name="ChoiceToIntervalOfDT" xsi:type="FunctionRef">
                           <operand path="performed" scope="HospicePerformed" xsi:type="Property"/>
                        </operand>
                        <operand name="Measurement Period" xsi:type="ParameterRef"/>
                     </operand>
                  </where>
               </operand>
            </operand>
         </expression>
      </def>
      <def name="Enrollment Periods" context="Patient" accessLevel="Public">
         <expression xsi:type="Collapse">
            <operand xsi:type="Query">
               <source alias="Cov">
                  <expression dataType="fhir:Coverage" xsi:type="Retrieve"/>
               </source>
               <where xsi:type="And">
                  <operand xsi:type="In">
                     <operand path="value" xsi:type="Property">
                        <source path="status" scope="Cov" xsi:type="Property"/>
                     </operand>
                     <operand xsi:type="List">
                        <element valueType="t:String" value="active" xsi:type="Literal"/>
                        <element valueType="t:String" value="cancelled" xsi:type="Literal"/>
                     </operand>
                  </operand>
                  <operand xsi:type="Case">
                     <comparand name="Product Line" xsi:type="ParameterRef"/>
                     <caseItem>
                        <when valueType="t:String" value="commercial" xsi:type="Literal"/>
                        <then xsi:type="InValueSet">
                           <code name="CodingToCode" xsi:type="FunctionRef">
                              <operand xsi:type="SingletonFrom">
                                 <operand path="coding" xsi:type="Property">
                                    <source path="type" scope="Cov" xsi:type="Property"/>
                                 </operand>
                              </operand>
                           </code>
                           <valueset name="X Commercial Coverage Value Set"/>
                        </then>
                     </caseItem>
                     <caseItem>
                        <when valueType="t:String" value="medicaid" xsi:type="Literal"/>
                        <then xsi:type="InValueSet">
                           <code name="CodingToCode" xsi:type="FunctionRef">
                              <operand xsi:type="SingletonFrom">
                                 <operand path="coding" xsi:type="Property">
                                    <source path="type" scope="Cov" xsi:type="Property"/>
                                 </operand>
                              </operand>
                           </code>
                           <valueset name="X Medicaid Coverage Value Set"/>
                        </then>
                     </caseItem>
                     <caseItem>
                        <when valueType="t:String" value="medicare" xsi:type="Literal"/>
                        <then xsi:type="InValueSet">
                           <code name="CodingToCode" xsi:type="FunctionRef">
                              <operand xsi:type="SingletonFrom">
                                 <operand path="coding" xsi:type="Property">
                                    <source path="type" scope="Cov" xsi:type="Property"/>
                                 </operand>
                              </operand>
                           </code>
                           <valueset name="X Medicare Coverage Value Set"/>
                        </then>
                     </caseItem>
                     <else valueType="t:Boolean" value="false" xsi:type="Literal"/>
                  </operand>
               </where>
               <return>
                  <expression name="PeriodToIntervalOfDT" xsi:type="FunctionRef">
                     <operand path="period" scope="Cov" xsi:type="Property"/>
                  </expression>
               </return>
            </operand>
         </expression>
      </def>
      <def name="Enrollment Periods In Year" context="Patient" accessLevel="Public" xsi:type="FunctionDef">
         <expression xsi:type="Query">
            <source alias="EnrP">
               <expression name="Enrollment Periods" xsi:type="ExpressionRef"/>
            </source>
            <where xsi:type="Overlaps">
               <operand name="EnrP" xsi:type="AliasRef"/>
               <operand name="Year" xsi:type="OperandRef"/>
            </where>
            <return>
               <expression xsi:type="Intersect">
                  <operand name="EnrP" xsi:type="AliasRef"/>
                  <operand name="Year" xsi:type="OperandRef"/>
               </expression>
            </return>
         </expression>
         <operand name="Year">
            <operandTypeSpecifier xsi:type="IntervalTypeSpecifier">
               <pointType name="t:DateTime" xsi:type="NamedTypeSpecifier"/>
            </operandTypeSpecifier>
         </operand>
      </def>
      <def name="Is Continuous Enrollment In Year" context="Patient" accessLevel="Public" xsi:type="FunctionDef">
         <expression xsi:type="Case">
            <comparand xsi:type="Count">
               <source name="Enrollment Periods In Year" xsi:type="FunctionRef">
                  <operand name="Year" xsi:type="OperandRef"/>
               </source>
            </comparand>
            <caseItem>
               <when valueType="t:Integer" value="1" xsi:type="Literal"/>
               <then xsi:type="Or">
                  <operand xsi:type="And">
                     <operand xsi:type="Starts">
                        <operand xsi:type="Indexer">
                           <operand name="Enrollment Periods In Year" xsi:type="FunctionRef">
                              <operand name="Year" xsi:type="OperandRef"/>
                           </operand>
                           <operand valueType="t:Integer" value="0" xsi:type="Literal"/>
                        </operand>
                        <operand name="Year" xsi:type="OperandRef"/>
                     </operand>
                     <operand xsi:type="LessOrEqual">
                        <operand precision="Day" xsi:type="DifferenceBetween">
                           <operand xsi:type="End">
                              <operand xsi:type="Indexer">
                                 <operand name="Enrollment Periods In Year" xsi:type="FunctionRef">
                                    <operand name="Year" xsi:type="OperandRef"/>
                                 </operand>
                                 <operand valueType="t:Integer" value="0" xsi:type="Literal"/>
                              </operand>
                           </operand>
                           <operand xsi:type="End">
                              <operand name="Year" xsi:type="OperandRef"/>
                           </operand>
                        </operand>
                        <operand valueType="t:Integer" value="45" xsi:type="Literal"/>
                     </operand>
                  </operand>
                  <operand xsi:type="And">
                     <operand xsi:type="Ends">
                        <operand xsi:type="Indexer">
                           <operand name="Enrollment Periods In Year" xsi:type="FunctionRef">
                              <operand name="Year" xsi:type="OperandRef"/>
                           </operand>
                           <operand valueType="t:Integer" value="0" xsi:type="Literal"/>
                        </operand>
                        <operand name="Year" xsi:type="OperandRef"/>
                     </operand>
                     <operand xsi:type="LessOrEqual">
                        <operand precision="Day" xsi:type="DifferenceBetween">
                           <operand xsi:type="Start">
                              <operand xsi:type="Indexer">
                                 <operand name="Enrollment Periods In Year" xsi:type="FunctionRef">
                                    <operand name="Year" xsi:type="OperandRef"/>
                                 </operand>
                                 <operand valueType="t:Integer" value="0" xsi:type="Literal"/>
                              </operand>
                           </operand>
                           <operand xsi:type="Start">
                              <operand name="Year" xsi:type="OperandRef"/>
                           </operand>
                        </operand>
                        <operand valueType="t:Integer" value="45" xsi:type="Literal"/>
                     </operand>
                  </operand>
               </then>
            </caseItem>
            <caseItem>
               <when valueType="t:Integer" value="2" xsi:type="Literal"/>
               <then xsi:type="And">
                  <operand xsi:type="And">
                     <operand xsi:type="Starts">
                        <operand xsi:type="Indexer">
                           <operand name="Enrollment Periods In Year" xsi:type="FunctionRef">
                              <operand name="Year" xsi:type="OperandRef"/>
                           </operand>
                           <operand valueType="t:Integer" value="0" xsi:type="Literal"/>
                        </operand>
                        <operand name="Year" xsi:type="OperandRef"/>
                     </operand>
                     <operand xsi:type="Ends">
                        <operand xsi:type="Indexer">
                           <operand name="Enrollment Periods In Year" xsi:type="FunctionRef">
                              <operand name="Year" xsi:type="OperandRef"/>
                           </operand>
                           <operand valueType="t:Integer" value="1" xsi:type="Literal"/>
                        </operand>
                        <operand name="Year" xsi:type="OperandRef"/>
                     </operand>
                  </operand>
                  <operand xsi:type="LessOrEqual">
                     <operand precision="Day" xsi:type="DifferenceBetween">
                        <operand xsi:type="End">
                           <operand xsi:type="Indexer">
                              <operand name="Enrollment Periods In Year" xsi:type="FunctionRef">
                                 <operand name="Year" xsi:type="OperandRef"/>
                              </operand>
                              <operand valueType="t:Integer" value="0" xsi:type="Literal"/>
                           </operand>
                        </operand>
                        <operand xsi:type="Start">
                           <operand xsi:type="Indexer">
                              <operand name="Enrollment Periods In Year" xsi:type="FunctionRef">
                                 <operand name="Year" xsi:type="OperandRef"/>
                              </operand>
                              <operand valueType="t:Integer" value="1" xsi:type="Literal"/>
                           </operand>
                        </operand>
                     </operand>
                     <operand valueType="t:Integer" value="45" xsi:type="Literal"/>
                  </operand>
               </then>
            </caseItem>
            <else valueType="t:Boolean" value="false" xsi:type="Literal"/>
         </expression>
         <operand name="Year">
            <operandTypeSpecifier xsi:type="IntervalTypeSpecifier">
               <pointType name="t:DateTime" xsi:type="NamedTypeSpecifier"/>
            </operandTypeSpecifier>
         </operand>
      </def>
      <def name="Is Continuous Enrollment In Quarter" context="Patient" accessLevel="Public" xsi:type="FunctionDef">
         <expression xsi:type="Case">
            <comparand xsi:type="Count">
               <source name="Enrollment Periods In Year" xsi:type="FunctionRef">
                  <operand name="Quarter" xsi:type="OperandRef"/>
               </source>
            </comparand>
            <caseItem>
               <when valueType="t:Integer" value="1" xsi:type="Literal"/>
               <then xsi:type="Equal">
                  <operand xsi:type="Indexer">
                     <operand name="Enrollment Periods In Year" xsi:type="FunctionRef">
                        <operand name="Quarter" xsi:type="OperandRef"/>
                     </operand>
                     <operand valueType="t:Integer" value="0" xsi:type="Literal"/>
                  </operand>
                  <operand name="Quarter" xsi:type="OperandRef"/>
               </then>
            </caseItem>
            <else valueType="t:Boolean" value="false" xsi:type="Literal"/>
         </expression>
         <operand name="Quarter">
            <operandTypeSpecifier xsi:type="IntervalTypeSpecifier">
               <pointType name="t:DateTime" xsi:type="NamedTypeSpecifier"/>
            </operandTypeSpecifier>
         </operand>
      </def>
      <def name="Is Continuous Enrollment" context="Patient" accessLevel="Public">
         <expression xsi:type="And">
            <operand xsi:type="And">
               <operand xsi:type="And">
                  <operand name="Is Continuous Enrollment In Year" xsi:type="FunctionRef">
                     <operand name="Measurement Period" xsi:type="ParameterRef"/>
                  </operand>
                  <operand name="Is Continuous Enrollment In Year" xsi:type="FunctionRef">
                     <operand name="First Predecessor Year" xsi:type="ExpressionRef"/>
                  </operand>
               </operand>
               <operand name="Is Continuous Enrollment In Year" xsi:type="FunctionRef">
                  <operand name="Second Predecessor Year" xsi:type="ExpressionRef"/>
               </operand>
            </operand>
            <operand name="Is Continuous Enrollment In Quarter" xsi:type="FunctionRef">
               <operand name="Third Predecessor Quarter" xsi:type="ExpressionRef"/>
            </operand>
         </expression>
      </def>
      <def name="Is Age 65 Plus at Start" context="Patient" accessLevel="Public">
         <expression xsi:type="GreaterOrEqual">
            <operand precision="Year" xsi:type="CalculateAgeAt">
               <operand path="birthDate.value" xsi:type="Property">
                  <source name="Patient" xsi:type="ExpressionRef"/>
               </operand>
               <operand xsi:type="Start">
                  <operand name="Measurement Period" xsi:type="ParameterRef"/>
               </operand>
            </operand>
            <operand valueType="t:Integer" value="65" xsi:type="Literal"/>
         </expression>
      </def>
      <def name="Is Enrolled in Institutional SNP" context="Patient" accessLevel="Public">
         <expression xsi:type="Exists">
            <operand xsi:type="Query">
               <source alias="Enc">
                  <expression dataType="fhir:Encounter" codeProperty="type" xsi:type="Retrieve">
                     <codes name="X Institutional SNP Value Set" xsi:type="ValueSetRef"/>
                  </expression>
               </source>
               <where xsi:type="And">
                  <operand xsi:type="In">
                     <operand path="value" xsi:type="Property">
                        <source path="status" scope="Enc" xsi:type="Property"/>
                     </operand>
                     <operand xsi:type="List">
                        <element valueType="t:String" value="planned" xsi:type="Literal"/>
                        <element valueType="t:String" value="arrived" xsi:type="Literal"/>
                        <element valueType="t:String" value="triaged" xsi:type="Literal"/>
                        <element valueType="t:String" value="in-progress" xsi:type="Literal"/>
                        <element valueType="t:String" value="onleave" xsi:type="Literal"/>
                        <element valueType="t:String" value="finished" xsi:type="Literal"/>
                     </operand>
                  </operand>
                  <operand xsi:type="Overlaps">
                     <operand name="PeriodToIntervalOfDT" xsi:type="FunctionRef">
                        <operand path="period" scope="Enc" xsi:type="Property"/>
                     </operand>
                     <operand name="Measurement Period" xsi:type="ParameterRef"/>
                  </operand>
               </where>
            </operand>
         </expression>
      </def>
      <def name="Is Living Long-Term in Institution" context="Patient" accessLevel="Public">
         <expression xsi:type="Exists">
            <operand xsi:type="Query">
               <source alias="Enc">
                  <expression dataType="fhir:Encounter" codeProperty="type" xsi:type="Retrieve">
                     <codes name="X Long-Term in Institution Value Set" xsi:type="ValueSetRef"/>
                  </expression>
               </source>
               <where xsi:type="And">
                  <operand xsi:type="In">
                     <operand path="value" xsi:type="Property">
                        <source path="status" scope="Enc" xsi:type="Property"/>
                     </operand>
                     <operand xsi:type="List">
                        <element valueType="t:String" value="planned" xsi:type="Literal"/>
                        <element valueType="t:String" value="arrived" xsi:type="Literal"/>
                        <element valueType="t:String" value="triaged" xsi:type="Literal"/>
                        <element valueType="t:String" value="in-progress" xsi:type="Literal"/>
                        <element valueType="t:String" value="onleave" xsi:type="Literal"/>
                        <element valueType="t:String" value="finished" xsi:type="Literal"/>
                     </operand>
                  </operand>
                  <operand xsi:type="Overlaps">
                     <operand name="PeriodToIntervalOfDT" xsi:type="FunctionRef">
                        <operand path="period" scope="Enc" xsi:type="Property"/>
                     </operand>
                     <operand name="Measurement Period" xsi:type="ParameterRef"/>
                  </operand>
               </where>
            </operand>
         </expression>
      </def>
      <def name="Is In Applicable Product Line" context="Patient" accessLevel="Public">
         <expression xsi:type="Case">
            <caseItem>
               <when xsi:type="Equivalent">
                  <operand name="Product Line" xsi:type="ParameterRef"/>
                  <operand asType="t:String" xsi:type="As">
                     <operand xsi:type="Null"/>
                     <asTypeSpecifier name="t:String" xsi:type="NamedTypeSpecifier"/>
                  </operand>
               </when>
               <then valueType="t:Boolean" value="true" xsi:type="Literal"/>
            </caseItem>
            <caseItem>
               <when xsi:type="Equal">
                  <operand name="Product Line" xsi:type="ParameterRef"/>
                  <operand valueType="t:String" value="commercial" xsi:type="Literal"/>
               </when>
               <then name="Is Continuous Enrollment" xsi:type="ExpressionRef"/>
            </caseItem>
            <caseItem>
               <when xsi:type="Equal">
                  <operand name="Product Line" xsi:type="ParameterRef"/>
                  <operand valueType="t:String" value="medicare" xsi:type="Literal"/>
               </when>
               <then xsi:type="And">
                  <operand name="Is Continuous Enrollment" xsi:type="ExpressionRef"/>
                  <operand xsi:type="If">
                     <condition asType="t:Boolean" xsi:type="As">
                        <operand name="Is Age 65 Plus at Start" xsi:type="ExpressionRef"/>
                        <asTypeSpecifier name="t:Boolean" xsi:type="NamedTypeSpecifier"/>
                     </condition>
                     <then xsi:type="Or">
                        <operand name="Is Enrolled in Institutional SNP" xsi:type="ExpressionRef"/>
                        <operand name="Is Living Long-Term in Institution" xsi:type="ExpressionRef"/>
                     </then>
                     <else valueType="t:Boolean" value="false" xsi:type="Literal"/>
                  </operand>
               </then>
            </caseItem>
            <else valueType="t:Boolean" value="false" xsi:type="Literal"/>
         </expression>
      </def>
      <def name="Is In Eligible Population" context="Patient" accessLevel="Public">
         <expression xsi:type="And">
            <operand xsi:type="And">
               <operand name="Is Age 51 to 75 at End" xsi:type="ExpressionRef"/>
               <operand xsi:type="Not">
                  <operand name="Is In Hospice" xsi:type="ExpressionRef"/>
               </operand>
            </operand>
            <operand name="Is In Applicable Product Line" xsi:type="ExpressionRef"/>
         </expression>
      </def>
      <def name="Is In Denominator" context="Patient" accessLevel="Public">
         <expression name="Is In Eligible Population" xsi:type="ExpressionRef"/>
      </def>
      <def name="Is Fecal Occult Blood Test In Last Year" context="Patient" accessLevel="Public">
         <expression xsi:type="Exists">
            <operand xsi:type="Query">
               <source alias="Obs">
                  <expression dataType="fhir:Observation" codeProperty="code" xsi:type="Retrieve">
                     <codes name="FOBT Value Set" xsi:type="ValueSetRef"/>
                  </expression>
               </source>
               <where xsi:type="And">
                  <operand xsi:type="In">
                     <operand path="value" xsi:type="Property">
                        <source path="status" scope="Obs" xsi:type="Property"/>
                     </operand>
                     <operand xsi:type="List">
                        <element valueType="t:String" value="final" xsi:type="Literal"/>
                        <element valueType="t:String" value="amended" xsi:type="Literal"/>
                     </operand>
                  </operand>
                  <operand xsi:type="IncludedIn">
                     <operand name="ChoiceToIntervalOfDT" xsi:type="FunctionRef">
                        <operand path="effective" scope="Obs" xsi:type="Property"/>
                     </operand>
                     <operand name="Measurement Period" xsi:type="ParameterRef"/>
                  </operand>
               </where>
            </operand>
         </expression>
      </def>
      <def name="Is Flexible Sigmoidoscopy In Last Five Years" context="Patient" accessLevel="Public">
         <expression xsi:type="Exists">
            <operand xsi:type="Query">
               <source alias="DiagRep">
                  <expression dataType="fhir:DiagnosticReport" codeProperty="code" xsi:type="Retrieve">
                     <codes name="Flexible Sigmoidoscopy Value Set" xsi:type="ValueSetRef"/>
                  </expression>
               </source>
               <where xsi:type="And">
                  <operand xsi:type="In">
                     <operand path="value" xsi:type="Property">
                        <source path="status" scope="DiagRep" xsi:type="Property"/>
                     </operand>
                     <operand xsi:type="List">
                        <element valueType="t:String" value="final" xsi:type="Literal"/>
                        <element valueType="t:String" value="appended" xsi:type="Literal"/>
                        <element valueType="t:String" value="corrected" xsi:type="Literal"/>
                     </operand>
                  </operand>
                  <operand xsi:type="IncludedIn">
                     <operand name="ChoiceToIntervalOfDT" xsi:type="FunctionRef">
                        <operand path="effective" scope="DiagRep" xsi:type="Property"/>
                     </operand>
                     <operand name="Lookback Interval Four More Years" xsi:type="ExpressionRef"/>
                  </operand>
               </where>
            </operand>
         </expression>
      </def>
      <def name="Is Colonoscopy In Last Ten Years" context="Patient" accessLevel="Public">
         <expression xsi:type="Exists">
            <operand xsi:type="Query">
               <source alias="DiagRep">
                  <expression dataType="fhir:DiagnosticReport" codeProperty="code" xsi:type="Retrieve">
                     <codes name="Colonoscopy Value Set" xsi:type="ValueSetRef"/>
                  </expression>
               </source>
               <where xsi:type="And">
                  <operand xsi:type="In">
                     <operand path="value" xsi:type="Property">
                        <source path="status" scope="DiagRep" xsi:type="Property"/>
                     </operand>
                     <operand xsi:type="List">
                        <element valueType="t:String" value="final" xsi:type="Literal"/>
                        <element valueType="t:String" value="appended" xsi:type="Literal"/>
                        <element valueType="t:String" value="corrected" xsi:type="Literal"/>
                     </operand>
                  </operand>
                  <operand xsi:type="IncludedIn">
                     <operand name="ChoiceToIntervalOfDT" xsi:type="FunctionRef">
                        <operand path="effective" scope="DiagRep" xsi:type="Property"/>
                     </operand>
                     <operand name="Lookback Interval Nine More Years" xsi:type="ExpressionRef"/>
                  </operand>
               </where>
            </operand>
         </expression>
      </def>
      <def name="Is CT Colonography In Last Five Years" context="Patient" accessLevel="Public">
         <expression xsi:type="Exists">
            <operand xsi:type="Query">
               <source alias="DiagRep">
                  <expression dataType="fhir:DiagnosticReport" codeProperty="code" xsi:type="Retrieve">
                     <codes name="CT Colonography Value Set" xsi:type="ValueSetRef"/>
                  </expression>
               </source>
               <where xsi:type="And">
                  <operand xsi:type="In">
                     <operand path="value" xsi:type="Property">
                        <source path="status" scope="DiagRep" xsi:type="Property"/>
                     </operand>
                     <operand xsi:type="List">
                        <element valueType="t:String" value="final" xsi:type="Literal"/>
                        <element valueType="t:String" value="appended" xsi:type="Literal"/>
                        <element valueType="t:String" value="corrected" xsi:type="Literal"/>
                     </operand>
                  </operand>
                  <operand xsi:type="IncludedIn">
                     <operand name="ChoiceToIntervalOfDT" xsi:type="FunctionRef">
                        <operand path="effective" scope="DiagRep" xsi:type="Property"/>
                     </operand>
                     <operand name="Lookback Interval Four More Years" xsi:type="ExpressionRef"/>
                  </operand>
               </where>
            </operand>
         </expression>
      </def>
      <def name="Is FIT-DNA Test In Last Three Years" context="Patient" accessLevel="Public">
         <expression xsi:type="Exists">
            <operand xsi:type="Query">
               <source alias="Obs">
                  <expression dataType="fhir:Observation" codeProperty="code" xsi:type="Retrieve">
                     <codes name="FIT-DNA Value Set" xsi:type="ValueSetRef"/>
                  </expression>
               </source>
               <where xsi:type="And">
                  <operand xsi:type="In">
                     <operand path="value" xsi:type="Property">
                        <source path="status" scope="Obs" xsi:type="Property"/>
                     </operand>
                     <operand xsi:type="List">
                        <element valueType="t:String" value="final" xsi:type="Literal"/>
                        <element valueType="t:String" value="amended" xsi:type="Literal"/>
                     </operand>
                  </operand>
                  <operand xsi:type="IncludedIn">
                     <operand name="ChoiceToIntervalOfDT" xsi:type="FunctionRef">
                        <operand path="effective" scope="Obs" xsi:type="Property"/>
                     </operand>
                     <operand name="Lookback Interval Two More Years" xsi:type="ExpressionRef"/>
                  </operand>
               </where>
            </operand>
         </expression>
      </def>
      <def name="Is Colorectal Cancer Screening" context="Patient" accessLevel="Public">
         <expression xsi:type="Or">
            <operand xsi:type="Or">
               <operand xsi:type="Or">
                  <operand xsi:type="Or">
                     <operand name="Is Fecal Occult Blood Test In Last Year" xsi:type="ExpressionRef"/>
                     <operand name="Is Flexible Sigmoidoscopy In Last Five Years" xsi:type="ExpressionRef"/>
                  </operand>
                  <operand name="Is Colonoscopy In Last Ten Years" xsi:type="ExpressionRef"/>
               </operand>
               <operand name="Is CT Colonography In Last Five Years" xsi:type="ExpressionRef"/>
            </operand>
            <operand name="Is FIT-DNA Test In Last Three Years" xsi:type="ExpressionRef"/>
         </expression>
      </def>
      <def name="Is In Numerator" context="Patient" accessLevel="Public">
         <expression xsi:type="And">
            <operand name="Is In Eligible Population" xsi:type="ExpressionRef"/>
            <operand name="Is Colorectal Cancer Screening" xsi:type="ExpressionRef"/>
         </expression>
      </def>
      <def name="Is Colorectal Cancer" context="Patient" accessLevel="Public">
         <expression xsi:type="Exists">
            <operand xsi:type="Query">
               <source alias="Cond">
                  <expression dataType="fhir:Condition" codeProperty="code" xsi:type="Retrieve">
                     <codes name="Colorectal Cancer Value Set" xsi:type="ValueSetRef"/>
                  </expression>
               </source>
               <where xsi:type="And">
                  <operand xsi:type="Equal">
                     <operand path="value" xsi:type="Property">
                        <source path="verificationStatus" scope="Cond" xsi:type="Property"/>
                     </operand>
                     <operand valueType="t:String" value="confirmed" xsi:type="Literal"/>
                  </operand>
                  <operand xsi:type="Before">
                     <operand path="value" xsi:type="Property">
                        <source path="assertedDate" scope="Cond" xsi:type="Property"/>
                     </operand>
                     <operand xsi:type="End">
                        <operand name="Measurement Period" xsi:type="ParameterRef"/>
                     </operand>
                  </operand>
               </where>
            </operand>
         </expression>
      </def>
      <def name="Is Total Colectomy" context="Patient" accessLevel="Public">
         <expression xsi:type="Exists">
            <operand xsi:type="Query">
               <source alias="Proc">
                  <expression dataType="fhir:Procedure" codeProperty="code" xsi:type="Retrieve">
                     <codes name="Total Colectomy Value Set" xsi:type="ValueSetRef"/>
                  </expression>
               </source>
               <where xsi:type="And">
                  <operand xsi:type="Equal">
                     <operand path="value" xsi:type="Property">
                        <source path="status" scope="Proc" xsi:type="Property"/>
                     </operand>
                     <operand valueType="t:String" value="completed" xsi:type="Literal"/>
                  </operand>
                  <operand xsi:type="Before">
                     <operand xsi:type="End">
                        <operand name="ChoiceToIntervalOfDT" xsi:type="FunctionRef">
                           <operand path="performed" scope="Proc" xsi:type="Property"/>
                        </operand>
                     </operand>
                     <operand xsi:type="End">
                        <operand name="Measurement Period" xsi:type="ParameterRef"/>
                     </operand>
                  </operand>
               </where>
            </operand>
         </expression>
      </def>
      <def name="Is In Administrative Exclusions" context="Patient" accessLevel="Public">
         <expression xsi:type="Or">
            <operand name="Is Colorectal Cancer" xsi:type="ExpressionRef"/>
            <operand name="Is Total Colectomy" xsi:type="ExpressionRef"/>
         </expression>
      </def>
   </statements>
</library>


