<?xml version="1.0" encoding="UTF-8"?>
<library xmlns="urn:hl7-org:elm:r1" xmlns:t="urn:hl7-org:elm-types:r1" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:fhir="http://hl7.org/fhir" xmlns:a="urn:hl7-org:cql-annotations:r1">
   <annotation startLine="257" startChar="3" endLine="257" endChar="38" message="Could not resolve membership operator for terminology target of the retrieve." errorType="semantic" errorSeverity="warning" xsi:type="a:CqlToElmError"/>
   <annotation startLine="286" startChar="3" endLine="286" endChar="47" message="Could not resolve membership operator for terminology target of the retrieve." errorType="semantic" errorSeverity="warning" xsi:type="a:CqlToElmError"/>
   <annotation startLine="293" startChar="3" endLine="293" endChar="58" message="Could not resolve membership operator for terminology target of the retrieve." errorType="semantic" errorSeverity="warning" xsi:type="a:CqlToElmError"/>
   <annotation startLine="306" startChar="7" endLine="306" endChar="52" message="Could not resolve membership operator for terminology target of the retrieve." errorType="semantic" errorSeverity="warning" xsi:type="a:CqlToElmError"/>
   <annotation startLine="312" startChar="70" endLine="312" endChar="79" message="List-valued expression was demoted to a singleton." errorType="semantic" errorSeverity="warning" xsi:type="a:CqlToElmError"/>
   <annotation startLine="315" startChar="7" endLine="315" endChar="49" message="Could not resolve membership operator for terminology target of the retrieve." errorType="semantic" errorSeverity="warning" xsi:type="a:CqlToElmError"/>
   <annotation startLine="321" startChar="70" endLine="321" endChar="79" message="List-valued expression was demoted to a singleton." errorType="semantic" errorSeverity="warning" xsi:type="a:CqlToElmError"/>
   <annotation startLine="329" startChar="4" endLine="329" endChar="49" message="Could not resolve membership operator for terminology target of the retrieve." errorType="semantic" errorSeverity="warning" xsi:type="a:CqlToElmError"/>
   <annotation startLine="334" startChar="5" endLine="334" endChar="50" message="Could not resolve membership operator for terminology target of the retrieve." errorType="semantic" errorSeverity="warning" xsi:type="a:CqlToElmError"/>
   <annotation startLine="350" startChar="7" endLine="350" endChar="52" message="Could not resolve membership operator for terminology target of the retrieve." errorType="semantic" errorSeverity="warning" xsi:type="a:CqlToElmError"/>
   <annotation startLine="356" startChar="70" endLine="356" endChar="79" message="List-valued expression was demoted to a singleton." errorType="semantic" errorSeverity="warning" xsi:type="a:CqlToElmError"/>
   <annotation startLine="359" startChar="7" endLine="359" endChar="44" message="Could not resolve membership operator for terminology target of the retrieve." errorType="semantic" errorSeverity="warning" xsi:type="a:CqlToElmError"/>
   <annotation startLine="365" startChar="70" endLine="365" endChar="79" message="List-valued expression was demoted to a singleton." errorType="semantic" errorSeverity="warning" xsi:type="a:CqlToElmError"/>
   <annotation startLine="372" startChar="3" endLine="372" endChar="53" message="Could not resolve membership operator for terminology target of the retrieve." errorType="semantic" errorSeverity="warning" xsi:type="a:CqlToElmError"/>
   <annotation startLine="379" startChar="3" endLine="379" endChar="51" message="Could not resolve membership operator for terminology target of the retrieve." errorType="semantic" errorSeverity="warning" xsi:type="a:CqlToElmError"/>
   <annotation startLine="391" startChar="7" endLine="391" endChar="52" message="Could not resolve membership operator for terminology target of the retrieve." errorType="semantic" errorSeverity="warning" xsi:type="a:CqlToElmError"/>
   <annotation startLine="397" startChar="70" endLine="397" endChar="79" message="List-valued expression was demoted to a singleton." errorType="semantic" errorSeverity="warning" xsi:type="a:CqlToElmError"/>
   <annotation startLine="400" startChar="7" endLine="400" endChar="45" message="Could not resolve membership operator for terminology target of the retrieve." errorType="semantic" errorSeverity="warning" xsi:type="a:CqlToElmError"/>
   <annotation startLine="406" startChar="70" endLine="406" endChar="79" message="List-valued expression was demoted to a singleton." errorType="semantic" errorSeverity="warning" xsi:type="a:CqlToElmError"/>
   <annotation startLine="413" startChar="3" endLine="413" endChar="54" message="Could not resolve membership operator for terminology target of the retrieve." errorType="semantic" errorSeverity="warning" xsi:type="a:CqlToElmError"/>
   <annotation startLine="420" startChar="3" endLine="420" endChar="52" message="Could not resolve membership operator for terminology target of the retrieve." errorType="semantic" errorSeverity="warning" xsi:type="a:CqlToElmError"/>
   <identifier id="BCS_FHIR" version="1.0.0"/>
   <schemaIdentifier id="urn:hl7-org:elm" version="r1"/>
   <usings>
      <def localIdentifier="System" uri="urn:hl7-org:elm-types:r1"/>
      <def localIdentifier="FHIR" uri="http://hl7.org/fhir" version="3.0.0"/>
   </usings>
   <parameters>
      <def name="Product Line" accessLevel="Public">
         <parameterTypeSpecifier name="t:String" xsi:type="NamedTypeSpecifier"/>
      </def>
      <def name="Measurement Period" accessLevel="Public">
         <parameterTypeSpecifier xsi:type="IntervalTypeSpecifier">
            <pointType name="t:DateTime" xsi:type="NamedTypeSpecifier"/>
         </parameterTypeSpecifier>
      </def>
   </parameters>
   <valueSets>
      <def name="Absence of Left Breast Value Set" id="2.16.840.1.113883.3.464.1004.1329.1" accessLevel="Public"/>
      <def name="Absence of Right Breast Value Set" id="2.16.840.1.113883.3.464.1004.1330.2" accessLevel="Public"/>
      <def name="Bilateral Mastectomy Value Set" id="2.16.840.1.113883.3.464.1004.1042.3" accessLevel="Public"/>
      <def name="Bilateral Modifier Value Set" id="2.16.840.1.113883.3.464.1004.1043.5" accessLevel="Public"/>
      <def name="History of Bilateral Mastectomy Value Set" id="2.16.840.1.113883.3.464.1004.1331.6" accessLevel="Public"/>
      <def name="Left Modifier Value Set" id="2.16.840.1.113883.3.464.1004.1148.7" accessLevel="Public"/>
      <def name="Mammography Value Set" id="2.16.840.1.113883.3.464.1004.1168.8" accessLevel="Public"/>
      <def name="Right Modifier Value Set" id="2.16.840.1.113883.3.464.1004.1230.12" accessLevel="Public"/>
      <def name="Unilateral Mastectomy Value Set" id="2.16.840.1.113883.3.464.1004.1256.13" accessLevel="Public"/>
      <def name="Unilateral Mastectomy Left Value Set" id="2.16.840.1.113883.3.464.1004.1334.15" accessLevel="Public"/>
      <def name="Unilateral Mastectomy Right Value Set" id="2.16.840.1.113883.3.464.1004.1335.16" accessLevel="Public"/>
   </valueSets>
   <statements>
      <def name="First Predecessor Year" context="Patient" accessLevel="Public">
         <expression lowClosed="true" highClosed="false" xsi:type="Interval">
            <low xsi:type="Subtract">
               <operand xsi:type="Start">
                  <operand name="Measurement Period" xsi:type="ParameterRef"/>
               </operand>
               <operand value="1" unit="year" xsi:type="Quantity"/>
            </low>
            <high xsi:type="Start">
               <operand name="Measurement Period" xsi:type="ParameterRef"/>
            </high>
         </expression>
      </def>
      <def name="Second Predecessor Year" context="Patient" accessLevel="Public">
         <expression lowClosed="true" highClosed="false" xsi:type="Interval">
            <low xsi:type="Subtract">
               <operand xsi:type="Start">
                  <operand name="Measurement Period" xsi:type="ParameterRef"/>
               </operand>
               <operand value="2" unit="years" xsi:type="Quantity"/>
            </low>
            <high xsi:type="Subtract">
               <operand xsi:type="Start">
                  <operand name="Measurement Period" xsi:type="ParameterRef"/>
               </operand>
               <operand value="1" unit="year" xsi:type="Quantity"/>
            </high>
         </expression>
      </def>
      <def name="Third Predecessor Quarter" context="Patient" accessLevel="Public">
         <expression lowClosed="true" highClosed="false" xsi:type="Interval">
            <low xsi:type="Subtract">
               <operand xsi:type="Subtract">
                  <operand xsi:type="Start">
                     <operand name="Measurement Period" xsi:type="ParameterRef"/>
                  </operand>
                  <operand value="2" unit="years" xsi:type="Quantity"/>
               </operand>
               <operand value="3" unit="months" xsi:type="Quantity"/>
            </low>
            <high xsi:type="Subtract">
               <operand xsi:type="Start">
                  <operand name="Measurement Period" xsi:type="ParameterRef"/>
               </operand>
               <operand value="2" unit="years" xsi:type="Quantity"/>
            </high>
         </expression>
      </def>
      <def name="Lookback Interval 27 More Months" context="Patient" accessLevel="Public">
         <expression lowClosed="true" highClosed="false" xsi:type="Interval">
            <low xsi:type="Subtract">
               <operand xsi:type="Start">
                  <operand name="Measurement Period" xsi:type="ParameterRef"/>
               </operand>
               <operand value="27" unit="months" xsi:type="Quantity"/>
            </low>
            <high xsi:type="End">
               <operand name="Measurement Period" xsi:type="ParameterRef"/>
            </high>
         </expression>
      </def>
      <def name="Patient" context="Patient">
         <expression xsi:type="SingletonFrom">
            <operand dataType="fhir:Patient" xsi:type="Retrieve"/>
         </expression>
      </def>
      <def name="Is Female" context="Patient" accessLevel="Public">
         <expression xsi:type="Equal">
            <operand path="value" xsi:type="Property">
               <source path="gender" xsi:type="Property">
                  <source name="Patient" xsi:type="ExpressionRef"/>
               </source>
            </operand>
            <operand valueType="t:String" value="female" xsi:type="Literal"/>
         </expression>
      </def>
      <def name="Is Age 52 to 74 at End" context="Patient" accessLevel="Public">
         <expression xsi:type="And">
            <operand xsi:type="GreaterOrEqual">
               <operand precision="Year" xsi:type="CalculateAgeAt">
                  <operand path="birthDate.value" xsi:type="Property">
                     <source name="Patient" xsi:type="ExpressionRef"/>
                  </operand>
                  <operand xsi:type="End">
                     <operand name="Measurement Period" xsi:type="ParameterRef"/>
                  </operand>
               </operand>
               <operand valueType="t:Integer" value="52" xsi:type="Literal"/>
            </operand>
            <operand xsi:type="LessOrEqual">
               <operand precision="Year" xsi:type="CalculateAgeAt">
                  <operand path="birthDate.value" xsi:type="Property">
                     <source name="Patient" xsi:type="ExpressionRef"/>
                  </operand>
                  <operand xsi:type="End">
                     <operand name="Measurement Period" xsi:type="ParameterRef"/>
                  </operand>
               </operand>
               <operand valueType="t:Integer" value="74" xsi:type="Literal"/>
            </operand>
         </expression>
      </def>
      <def name="Initial Population" context="Patient" accessLevel="Public">
         <expression xsi:type="And">
            <operand name="Is Female" xsi:type="ExpressionRef"/>
            <operand name="Is Age 52 to 74 at End" xsi:type="ExpressionRef"/>
         </expression>
      </def>
      <def name="Denominator" context="Patient" accessLevel="Public">
         <expression name="Initial Population" xsi:type="ExpressionRef"/>
      </def>
      <def name="ChoiceToIntervalOfDT" context="Patient" accessLevel="Public" xsi:type="FunctionDef">
         <expression xsi:type="If">
            <condition asType="t:Boolean" xsi:type="As">
               <operand xsi:type="Is">
                  <operand name="value" xsi:type="OperandRef"/>
                  <isTypeSpecifier name="fhir:dateTime" xsi:type="NamedTypeSpecifier"/>
               </operand>
               <asTypeSpecifier name="t:Boolean" xsi:type="NamedTypeSpecifier"/>
            </condition>
            <then lowClosed="true" highClosed="true" xsi:type="Interval">
               <low path="value" xsi:type="Property">
                  <source name="value" xsi:type="OperandRef"/>
               </low>
               <high path="value" xsi:type="Property">
                  <source name="value" xsi:type="OperandRef"/>
               </high>
            </then>
            <else lowClosed="true" highClosed="true" xsi:type="Interval">
               <low path="value" xsi:type="Property">
                  <source path="start" xsi:type="Property">
                     <source name="value" xsi:type="OperandRef"/>
                  </source>
               </low>
               <high path="value" xsi:type="Property">
                  <source path="end" xsi:type="Property">
                     <source name="value" xsi:type="OperandRef"/>
                  </source>
               </high>
            </else>
         </expression>
         <operand name="value">
            <operandTypeSpecifier xsi:type="ChoiceTypeSpecifier">
               <type name="fhir:dateTime" xsi:type="NamedTypeSpecifier"/>
               <type name="fhir:Period" xsi:type="NamedTypeSpecifier"/>
            </operandTypeSpecifier>
         </operand>
      </def>
      <def name="Is Mammogram In Last 39 Months" context="Patient" accessLevel="Public">
         <expression xsi:type="Exists">
            <operand xsi:type="Query">
               <source alias="Proc">
                  <expression dataType="fhir:Procedure" codeProperty="code" xsi:type="Retrieve">
                     <codes name="Mammography Value Set" xsi:type="ValueSetRef"/>
                  </expression>
               </source>
               <where xsi:type="And">
                  <operand xsi:type="Equal">
                     <operand path="value" xsi:type="Property">
                        <source path="status" scope="Proc" xsi:type="Property"/>
                     </operand>
                     <operand valueType="t:String" value="completed" xsi:type="Literal"/>
                  </operand>
                  <operand xsi:type="IncludedIn">
                     <operand name="ChoiceToIntervalOfDT" xsi:type="FunctionRef">
                        <operand path="performed" scope="Proc" xsi:type="Property"/>
                     </operand>
                     <operand name="Lookback Interval 27 More Months" xsi:type="ExpressionRef"/>
                  </operand>
               </where>
            </operand>
         </expression>
      </def>
      <def name="Numerator" context="Patient" accessLevel="Public">
         <expression xsi:type="And">
            <operand name="Initial Population" xsi:type="ExpressionRef"/>
            <operand name="Is Mammogram In Last 39 Months" xsi:type="ExpressionRef"/>
         </expression>
      </def>
      <def name="Is Bilateral Mastectomy" context="Patient" accessLevel="Public">
         <expression xsi:type="Exists">
            <operand xsi:type="Query">
               <source alias="Proc">
                  <expression dataType="fhir:Procedure" codeProperty="code" xsi:type="Retrieve">
                     <codes name="Bilateral Mastectomy Value Set" xsi:type="ValueSetRef"/>
                  </expression>
               </source>
               <where xsi:type="And">
                  <operand xsi:type="Equal">
                     <operand path="value" xsi:type="Property">
                        <source path="status" scope="Proc" xsi:type="Property"/>
                     </operand>
                     <operand valueType="t:String" value="completed" xsi:type="Literal"/>
                  </operand>
                  <operand xsi:type="Before">
                     <operand xsi:type="End">
                        <operand name="ChoiceToIntervalOfDT" xsi:type="FunctionRef">
                           <operand path="performed" scope="Proc" xsi:type="Property"/>
                        </operand>
                     </operand>
                     <operand xsi:type="End">
                        <operand name="Measurement Period" xsi:type="ParameterRef"/>
                     </operand>
                  </operand>
               </where>
            </operand>
         </expression>
      </def>
      <def name="Is History Of Bilateral Mastectomy" context="Patient" accessLevel="Public">
         <expression xsi:type="Exists">
            <operand xsi:type="Query">
               <source alias="Proc">
                  <expression dataType="fhir:Procedure" codeProperty="code" xsi:type="Retrieve">
                     <codes name="History of Bilateral Mastectomy Value Set" xsi:type="ValueSetRef"/>
                  </expression>
               </source>
               <where xsi:type="And">
                  <operand xsi:type="Equal">
                     <operand path="value" xsi:type="Property">
                        <source path="status" scope="Proc" xsi:type="Property"/>
                     </operand>
                     <operand valueType="t:String" value="completed" xsi:type="Literal"/>
                  </operand>
                  <operand xsi:type="Before">
                     <operand xsi:type="End">
                        <operand name="ChoiceToIntervalOfDT" xsi:type="FunctionRef">
                           <operand path="performed" scope="Proc" xsi:type="Property"/>
                        </operand>
                     </operand>
                     <operand xsi:type="End">
                        <operand name="Measurement Period" xsi:type="ParameterRef"/>
                     </operand>
                  </operand>
               </where>
            </operand>
         </expression>
      </def>
      <def name="Is Unilateral Mastectomy With Bilateral Modifier" context="Patient" accessLevel="Public">
         <expression xsi:type="Exists">
            <operand xsi:type="Query">
               <source alias="Claim">
                  <expression dataType="fhir:Claim" xsi:type="Retrieve"/>
               </source>
               <where xsi:type="And">
                  <operand xsi:type="Equal">
                     <operand path="value" xsi:type="Property">
                        <source path="status" scope="Claim" xsi:type="Property"/>
                     </operand>
                     <operand valueType="t:String" value="active" xsi:type="Literal"/>
                  </operand>
                  <operand xsi:type="Exists">
                     <operand xsi:type="Query">
                        <source alias="BbElem">
                           <expression path="procedure" scope="Claim" xsi:type="Property"/>
                        </source>
                        <relationship alias="Proc1" xsi:type="With">
                           <expression xsi:type="Query">
                              <source alias="Proc">
                                 <expression dataType="fhir:Procedure" codeProperty="code" xsi:type="Retrieve">
                                    <codes name="Unilateral Mastectomy Value Set" xsi:type="ValueSetRef"/>
                                 </expression>
                              </source>
                              <where xsi:type="And">
                                 <operand xsi:type="Equal">
                                    <operand path="value" xsi:type="Property">
                                       <source path="status" scope="Proc" xsi:type="Property"/>
                                    </operand>
                                    <operand valueType="t:String" value="completed" xsi:type="Literal"/>
                                 </operand>
                                 <operand xsi:type="Before">
                                    <operand xsi:type="End">
                                       <operand name="ChoiceToIntervalOfDT" xsi:type="FunctionRef">
                                          <operand path="performed" scope="Proc" xsi:type="Property"/>
                                       </operand>
                                    </operand>
                                    <operand xsi:type="End">
                                       <operand name="Measurement Period" xsi:type="ParameterRef"/>
                                    </operand>
                                 </operand>
                              </where>
                           </expression>
                           <suchThat xsi:type="If">
                              <condition asType="t:Boolean" xsi:type="As">
                                 <operand xsi:type="Is">
                                    <operand path="procedure" scope="BbElem" xsi:type="Property"/>
                                    <isTypeSpecifier name="fhir:Reference" xsi:type="NamedTypeSpecifier"/>
                                 </operand>
                                 <asTypeSpecifier name="t:Boolean" xsi:type="NamedTypeSpecifier"/>
                              </condition>
                              <then xsi:type="Equivalent">
                                 <operand path="identifier" xsi:type="Property">
                                    <source strict="false" xsi:type="As">
                                       <operand path="procedure" scope="BbElem" xsi:type="Property"/>
                                       <asTypeSpecifier name="fhir:Reference" xsi:type="NamedTypeSpecifier"/>
                                    </source>
                                 </operand>
                                 <operand xsi:type="SingletonFrom">
                                    <operand path="identifier" scope="Proc1" xsi:type="Property"/>
                                 </operand>
                              </then>
                              <else valueType="t:Boolean" value="false" xsi:type="Literal"/>
                           </suchThat>
                        </relationship>
                        <relationship alias="Proc2" xsi:type="With">
                           <expression xsi:type="Query">
                              <source alias="Proc">
                                 <expression dataType="fhir:Procedure" codeProperty="code" xsi:type="Retrieve">
                                    <codes name="Bilateral Modifier Value Set" xsi:type="ValueSetRef"/>
                                 </expression>
                              </source>
                              <where xsi:type="And">
                                 <operand xsi:type="Equal">
                                    <operand path="value" xsi:type="Property">
                                       <source path="status" scope="Proc" xsi:type="Property"/>
                                    </operand>
                                    <operand valueType="t:String" value="completed" xsi:type="Literal"/>
                                 </operand>
                                 <operand xsi:type="Before">
                                    <operand xsi:type="End">
                                       <operand name="ChoiceToIntervalOfDT" xsi:type="FunctionRef">
                                          <operand path="performed" scope="Proc" xsi:type="Property"/>
                                       </operand>
                                    </operand>
                                    <operand xsi:type="End">
                                       <operand name="Measurement Period" xsi:type="ParameterRef"/>
                                    </operand>
                                 </operand>
                              </where>
                           </expression>
                           <suchThat xsi:type="If">
                              <condition asType="t:Boolean" xsi:type="As">
                                 <operand xsi:type="Is">
                                    <operand path="procedure" scope="BbElem" xsi:type="Property"/>
                                    <isTypeSpecifier name="fhir:Reference" xsi:type="NamedTypeSpecifier"/>
                                 </operand>
                                 <asTypeSpecifier name="t:Boolean" xsi:type="NamedTypeSpecifier"/>
                              </condition>
                              <then xsi:type="Equivalent">
                                 <operand path="identifier" xsi:type="Property">
                                    <source strict="false" xsi:type="As">
                                       <operand path="procedure" scope="BbElem" xsi:type="Property"/>
                                       <asTypeSpecifier name="fhir:Reference" xsi:type="NamedTypeSpecifier"/>
                                    </source>
                                 </operand>
                                 <operand xsi:type="SingletonFrom">
                                    <operand path="identifier" scope="Proc2" xsi:type="Property"/>
                                 </operand>
                              </then>
                              <else valueType="t:Boolean" value="false" xsi:type="Literal"/>
                           </suchThat>
                        </relationship>
                     </operand>
                  </operand>
               </where>
            </operand>
         </expression>
      </def>
      <def name="Is Unilateral Mastectomy Twice Spread Two Weeks" context="Patient" accessLevel="Public">
         <expression xsi:type="Exists">
            <operand xsi:type="Query">
               <source alias="WhenUM1">
                  <expression xsi:type="Query">
                     <source alias="Proc">
                        <expression dataType="fhir:Procedure" codeProperty="code" xsi:type="Retrieve">
                           <codes name="Unilateral Mastectomy Value Set" xsi:type="ValueSetRef"/>
                        </expression>
                     </source>
                     <where xsi:type="Equal">
                        <operand path="value" xsi:type="Property">
                           <source path="status" scope="Proc" xsi:type="Property"/>
                        </operand>
                        <operand valueType="t:String" value="completed" xsi:type="Literal"/>
                     </where>
                     <return>
                        <expression name="ChoiceToIntervalOfDT" xsi:type="FunctionRef">
                           <operand path="performed" scope="Proc" xsi:type="Property"/>
                        </expression>
                     </return>
                  </expression>
               </source>
               <relationship alias="WhenUM2" xsi:type="With">
                  <expression xsi:type="Query">
                     <source alias="Proc">
                        <expression dataType="fhir:Procedure" codeProperty="code" xsi:type="Retrieve">
                           <codes name="Unilateral Mastectomy Value Set" xsi:type="ValueSetRef"/>
                        </expression>
                     </source>
                     <where xsi:type="Equal">
                        <operand path="value" xsi:type="Property">
                           <source path="status" scope="Proc" xsi:type="Property"/>
                        </operand>
                        <operand valueType="t:String" value="completed" xsi:type="Literal"/>
                     </where>
                     <return>
                        <expression name="ChoiceToIntervalOfDT" xsi:type="FunctionRef">
                           <operand path="performed" scope="Proc" xsi:type="Property"/>
                        </expression>
                     </return>
                  </expression>
                  <suchThat xsi:type="And">
                     <operand xsi:type="And">
                        <operand xsi:type="GreaterOrEqual">
                           <operand precision="Day" xsi:type="DifferenceBetween">
                              <operand xsi:type="Start">
                                 <operand name="WhenUM1" xsi:type="AliasRef"/>
                              </operand>
                              <operand xsi:type="Start">
                                 <operand name="WhenUM2" xsi:type="AliasRef"/>
                              </operand>
                           </operand>
                           <operand valueType="t:Integer" value="14" xsi:type="Literal"/>
                        </operand>
                        <operand xsi:type="Before">
                           <operand xsi:type="End">
                              <operand name="WhenUM1" xsi:type="AliasRef"/>
                           </operand>
                           <operand xsi:type="End">
                              <operand name="Measurement Period" xsi:type="ParameterRef"/>
                           </operand>
                        </operand>
                     </operand>
                     <operand xsi:type="Before">
                        <operand xsi:type="End">
                           <operand name="WhenUM2" xsi:type="AliasRef"/>
                        </operand>
                        <operand xsi:type="End">
                           <operand name="Measurement Period" xsi:type="ParameterRef"/>
                        </operand>
                     </operand>
                  </suchThat>
               </relationship>
            </operand>
         </expression>
      </def>
      <def name="Is Lacking Both Breasts" context="Patient" accessLevel="Public">
         <expression xsi:type="Or">
            <operand xsi:type="Or">
               <operand xsi:type="Or">
                  <operand name="Is Bilateral Mastectomy" xsi:type="ExpressionRef"/>
                  <operand name="Is History Of Bilateral Mastectomy" xsi:type="ExpressionRef"/>
               </operand>
               <operand name="Is Unilateral Mastectomy With Bilateral Modifier" xsi:type="ExpressionRef"/>
            </operand>
            <operand name="Is Unilateral Mastectomy Twice Spread Two Weeks" xsi:type="ExpressionRef"/>
         </expression>
      </def>
      <def name="Is Unilateral Mastectomy With Left Modifier" context="Patient" accessLevel="Public">
         <expression xsi:type="Exists">
            <operand xsi:type="Query">
               <source alias="Claim">
                  <expression dataType="fhir:Claim" xsi:type="Retrieve"/>
               </source>
               <where xsi:type="And">
                  <operand xsi:type="Equal">
                     <operand path="value" xsi:type="Property">
                        <source path="status" scope="Claim" xsi:type="Property"/>
                     </operand>
                     <operand valueType="t:String" value="active" xsi:type="Literal"/>
                  </operand>
                  <operand xsi:type="Exists">
                     <operand xsi:type="Query">
                        <source alias="BbElem">
                           <expression path="procedure" scope="Claim" xsi:type="Property"/>
                        </source>
                        <relationship alias="Proc1" xsi:type="With">
                           <expression xsi:type="Query">
                              <source alias="Proc">
                                 <expression dataType="fhir:Procedure" codeProperty="code" xsi:type="Retrieve">
                                    <codes name="Unilateral Mastectomy Value Set" xsi:type="ValueSetRef"/>
                                 </expression>
                              </source>
                              <where xsi:type="And">
                                 <operand xsi:type="Equal">
                                    <operand path="value" xsi:type="Property">
                                       <source path="status" scope="Proc" xsi:type="Property"/>
                                    </operand>
                                    <operand valueType="t:String" value="completed" xsi:type="Literal"/>
                                 </operand>
                                 <operand xsi:type="Before">
                                    <operand xsi:type="End">
                                       <operand name="ChoiceToIntervalOfDT" xsi:type="FunctionRef">
                                          <operand path="performed" scope="Proc" xsi:type="Property"/>
                                       </operand>
                                    </operand>
                                    <operand xsi:type="End">
                                       <operand name="Measurement Period" xsi:type="ParameterRef"/>
                                    </operand>
                                 </operand>
                              </where>
                           </expression>
                           <suchThat xsi:type="If">
                              <condition asType="t:Boolean" xsi:type="As">
                                 <operand xsi:type="Is">
                                    <operand path="procedure" scope="BbElem" xsi:type="Property"/>
                                    <isTypeSpecifier name="fhir:Reference" xsi:type="NamedTypeSpecifier"/>
                                 </operand>
                                 <asTypeSpecifier name="t:Boolean" xsi:type="NamedTypeSpecifier"/>
                              </condition>
                              <then xsi:type="Equivalent">
                                 <operand path="identifier" xsi:type="Property">
                                    <source strict="false" xsi:type="As">
                                       <operand path="procedure" scope="BbElem" xsi:type="Property"/>
                                       <asTypeSpecifier name="fhir:Reference" xsi:type="NamedTypeSpecifier"/>
                                    </source>
                                 </operand>
                                 <operand xsi:type="SingletonFrom">
                                    <operand path="identifier" scope="Proc1" xsi:type="Property"/>
                                 </operand>
                              </then>
                              <else valueType="t:Boolean" value="false" xsi:type="Literal"/>
                           </suchThat>
                        </relationship>
                        <relationship alias="Proc2" xsi:type="With">
                           <expression xsi:type="Query">
                              <source alias="Proc">
                                 <expression dataType="fhir:Procedure" codeProperty="code" xsi:type="Retrieve">
                                    <codes name="Left Modifier Value Set" xsi:type="ValueSetRef"/>
                                 </expression>
                              </source>
                              <where xsi:type="And">
                                 <operand xsi:type="Equal">
                                    <operand path="value" xsi:type="Property">
                                       <source path="status" scope="Proc" xsi:type="Property"/>
                                    </operand>
                                    <operand valueType="t:String" value="completed" xsi:type="Literal"/>
                                 </operand>
                                 <operand xsi:type="Before">
                                    <operand xsi:type="End">
                                       <operand name="ChoiceToIntervalOfDT" xsi:type="FunctionRef">
                                          <operand path="performed" scope="Proc" xsi:type="Property"/>
                                       </operand>
                                    </operand>
                                    <operand xsi:type="End">
                                       <operand name="Measurement Period" xsi:type="ParameterRef"/>
                                    </operand>
                                 </operand>
                              </where>
                           </expression>
                           <suchThat xsi:type="If">
                              <condition asType="t:Boolean" xsi:type="As">
                                 <operand xsi:type="Is">
                                    <operand path="procedure" scope="BbElem" xsi:type="Property"/>
                                    <isTypeSpecifier name="fhir:Reference" xsi:type="NamedTypeSpecifier"/>
                                 </operand>
                                 <asTypeSpecifier name="t:Boolean" xsi:type="NamedTypeSpecifier"/>
                              </condition>
                              <then xsi:type="Equivalent">
                                 <operand path="identifier" xsi:type="Property">
                                    <source strict="false" xsi:type="As">
                                       <operand path="procedure" scope="BbElem" xsi:type="Property"/>
                                       <asTypeSpecifier name="fhir:Reference" xsi:type="NamedTypeSpecifier"/>
                                    </source>
                                 </operand>
                                 <operand xsi:type="SingletonFrom">
                                    <operand path="identifier" scope="Proc2" xsi:type="Property"/>
                                 </operand>
                              </then>
                              <else valueType="t:Boolean" value="false" xsi:type="Literal"/>
                           </suchThat>
                        </relationship>
                     </operand>
                  </operand>
               </where>
            </operand>
         </expression>
      </def>
      <def name="Is Unilateral Mastectomy Left" context="Patient" accessLevel="Public">
         <expression xsi:type="Exists">
            <operand xsi:type="Query">
               <source alias="Proc">
                  <expression dataType="fhir:Procedure" codeProperty="code" xsi:type="Retrieve">
                     <codes name="Unilateral Mastectomy Left Value Set" xsi:type="ValueSetRef"/>
                  </expression>
               </source>
               <where xsi:type="And">
                  <operand xsi:type="Equal">
                     <operand path="value" xsi:type="Property">
                        <source path="status" scope="Proc" xsi:type="Property"/>
                     </operand>
                     <operand valueType="t:String" value="completed" xsi:type="Literal"/>
                  </operand>
                  <operand xsi:type="Before">
                     <operand xsi:type="End">
                        <operand name="ChoiceToIntervalOfDT" xsi:type="FunctionRef">
                           <operand path="performed" scope="Proc" xsi:type="Property"/>
                        </operand>
                     </operand>
                     <operand xsi:type="End">
                        <operand name="Measurement Period" xsi:type="ParameterRef"/>
                     </operand>
                  </operand>
               </where>
            </operand>
         </expression>
      </def>
      <def name="Is Absence Of Left Breast" context="Patient" accessLevel="Public">
         <expression xsi:type="Exists">
            <operand xsi:type="Query">
               <source alias="Obs">
                  <expression dataType="fhir:Observation" codeProperty="code" xsi:type="Retrieve">
                     <codes name="Absence of Left Breast Value Set" xsi:type="ValueSetRef"/>
                  </expression>
               </source>
               <where xsi:type="And">
                  <operand xsi:type="In">
                     <operand path="value" xsi:type="Property">
                        <source path="status" scope="Obs" xsi:type="Property"/>
                     </operand>
                     <operand xsi:type="List">
                        <element valueType="t:String" value="final" xsi:type="Literal"/>
                        <element valueType="t:String" value="amended" xsi:type="Literal"/>
                     </operand>
                  </operand>
                  <operand xsi:type="Before">
                     <operand xsi:type="End">
                        <operand name="ChoiceToIntervalOfDT" xsi:type="FunctionRef">
                           <operand path="effective" scope="Obs" xsi:type="Property"/>
                        </operand>
                     </operand>
                     <operand xsi:type="End">
                        <operand name="Measurement Period" xsi:type="ParameterRef"/>
                     </operand>
                  </operand>
               </where>
            </operand>
         </expression>
      </def>
      <def name="Is Lacking Left Breast" context="Patient" accessLevel="Public">
         <expression xsi:type="Or">
            <operand xsi:type="Or">
               <operand name="Is Unilateral Mastectomy With Left Modifier" xsi:type="ExpressionRef"/>
               <operand name="Is Unilateral Mastectomy Left" xsi:type="ExpressionRef"/>
            </operand>
            <operand name="Is Absence Of Left Breast" xsi:type="ExpressionRef"/>
         </expression>
      </def>
      <def name="Is Unilateral Mastectomy With Right Modifier" context="Patient" accessLevel="Public">
         <expression xsi:type="Exists">
            <operand xsi:type="Query">
               <source alias="Claim">
                  <expression dataType="fhir:Claim" xsi:type="Retrieve"/>
               </source>
               <where xsi:type="And">
                  <operand xsi:type="Equal">
                     <operand path="value" xsi:type="Property">
                        <source path="status" scope="Claim" xsi:type="Property"/>
                     </operand>
                     <operand valueType="t:String" value="active" xsi:type="Literal"/>
                  </operand>
                  <operand xsi:type="Exists">
                     <operand xsi:type="Query">
                        <source alias="BbElem">
                           <expression path="procedure" scope="Claim" xsi:type="Property"/>
                        </source>
                        <relationship alias="Proc1" xsi:type="With">
                           <expression xsi:type="Query">
                              <source alias="Proc">
                                 <expression dataType="fhir:Procedure" codeProperty="code" xsi:type="Retrieve">
                                    <codes name="Unilateral Mastectomy Value Set" xsi:type="ValueSetRef"/>
                                 </expression>
                              </source>
                              <where xsi:type="And">
                                 <operand xsi:type="Equal">
                                    <operand path="value" xsi:type="Property">
                                       <source path="status" scope="Proc" xsi:type="Property"/>
                                    </operand>
                                    <operand valueType="t:String" value="completed" xsi:type="Literal"/>
                                 </operand>
                                 <operand xsi:type="Before">
                                    <operand xsi:type="End">
                                       <operand name="ChoiceToIntervalOfDT" xsi:type="FunctionRef">
                                          <operand path="performed" scope="Proc" xsi:type="Property"/>
                                       </operand>
                                    </operand>
                                    <operand xsi:type="End">
                                       <operand name="Measurement Period" xsi:type="ParameterRef"/>
                                    </operand>
                                 </operand>
                              </where>
                           </expression>
                           <suchThat xsi:type="If">
                              <condition asType="t:Boolean" xsi:type="As">
                                 <operand xsi:type="Is">
                                    <operand path="procedure" scope="BbElem" xsi:type="Property"/>
                                    <isTypeSpecifier name="fhir:Reference" xsi:type="NamedTypeSpecifier"/>
                                 </operand>
                                 <asTypeSpecifier name="t:Boolean" xsi:type="NamedTypeSpecifier"/>
                              </condition>
                              <then xsi:type="Equivalent">
                                 <operand path="identifier" xsi:type="Property">
                                    <source strict="false" xsi:type="As">
                                       <operand path="procedure" scope="BbElem" xsi:type="Property"/>
                                       <asTypeSpecifier name="fhir:Reference" xsi:type="NamedTypeSpecifier"/>
                                    </source>
                                 </operand>
                                 <operand xsi:type="SingletonFrom">
                                    <operand path="identifier" scope="Proc1" xsi:type="Property"/>
                                 </operand>
                              </then>
                              <else valueType="t:Boolean" value="false" xsi:type="Literal"/>
                           </suchThat>
                        </relationship>
                        <relationship alias="Proc2" xsi:type="With">
                           <expression xsi:type="Query">
                              <source alias="Proc">
                                 <expression dataType="fhir:Procedure" codeProperty="code" xsi:type="Retrieve">
                                    <codes name="Right Modifier Value Set" xsi:type="ValueSetRef"/>
                                 </expression>
                              </source>
                              <where xsi:type="And">
                                 <operand xsi:type="Equal">
                                    <operand path="value" xsi:type="Property">
                                       <source path="status" scope="Proc" xsi:type="Property"/>
                                    </operand>
                                    <operand valueType="t:String" value="completed" xsi:type="Literal"/>
                                 </operand>
                                 <operand xsi:type="Before">
                                    <operand xsi:type="End">
                                       <operand name="ChoiceToIntervalOfDT" xsi:type="FunctionRef">
                                          <operand path="performed" scope="Proc" xsi:type="Property"/>
                                       </operand>
                                    </operand>
                                    <operand xsi:type="End">
                                       <operand name="Measurement Period" xsi:type="ParameterRef"/>
                                    </operand>
                                 </operand>
                              </where>
                           </expression>
                           <suchThat xsi:type="If">
                              <condition asType="t:Boolean" xsi:type="As">
                                 <operand xsi:type="Is">
                                    <operand path="procedure" scope="BbElem" xsi:type="Property"/>
                                    <isTypeSpecifier name="fhir:Reference" xsi:type="NamedTypeSpecifier"/>
                                 </operand>
                                 <asTypeSpecifier name="t:Boolean" xsi:type="NamedTypeSpecifier"/>
                              </condition>
                              <then xsi:type="Equivalent">
                                 <operand path="identifier" xsi:type="Property">
                                    <source strict="false" xsi:type="As">
                                       <operand path="procedure" scope="BbElem" xsi:type="Property"/>
                                       <asTypeSpecifier name="fhir:Reference" xsi:type="NamedTypeSpecifier"/>
                                    </source>
                                 </operand>
                                 <operand xsi:type="SingletonFrom">
                                    <operand path="identifier" scope="Proc2" xsi:type="Property"/>
                                 </operand>
                              </then>
                              <else valueType="t:Boolean" value="false" xsi:type="Literal"/>
                           </suchThat>
                        </relationship>
                     </operand>
                  </operand>
               </where>
            </operand>
         </expression>
      </def>
      <def name="Is Unilateral Mastectomy Right" context="Patient" accessLevel="Public">
         <expression xsi:type="Exists">
            <operand xsi:type="Query">
               <source alias="Proc">
                  <expression dataType="fhir:Procedure" codeProperty="code" xsi:type="Retrieve">
                     <codes name="Unilateral Mastectomy Right Value Set" xsi:type="ValueSetRef"/>
                  </expression>
               </source>
               <where xsi:type="And">
                  <operand xsi:type="Equal">
                     <operand path="value" xsi:type="Property">
                        <source path="status" scope="Proc" xsi:type="Property"/>
                     </operand>
                     <operand valueType="t:String" value="completed" xsi:type="Literal"/>
                  </operand>
                  <operand xsi:type="Before">
                     <operand xsi:type="End">
                        <operand name="ChoiceToIntervalOfDT" xsi:type="FunctionRef">
                           <operand path="performed" scope="Proc" xsi:type="Property"/>
                        </operand>
                     </operand>
                     <operand xsi:type="End">
                        <operand name="Measurement Period" xsi:type="ParameterRef"/>
                     </operand>
                  </operand>
               </where>
            </operand>
         </expression>
      </def>
      <def name="Is Absence Of Right Breast" context="Patient" accessLevel="Public">
         <expression xsi:type="Exists">
            <operand xsi:type="Query">
               <source alias="Obs">
                  <expression dataType="fhir:Observation" codeProperty="code" xsi:type="Retrieve">
                     <codes name="Absence of Right Breast Value Set" xsi:type="ValueSetRef"/>
                  </expression>
               </source>
               <where xsi:type="And">
                  <operand xsi:type="In">
                     <operand path="value" xsi:type="Property">
                        <source path="status" scope="Obs" xsi:type="Property"/>
                     </operand>
                     <operand xsi:type="List">
                        <element valueType="t:String" value="final" xsi:type="Literal"/>
                        <element valueType="t:String" value="amended" xsi:type="Literal"/>
                     </operand>
                  </operand>
                  <operand xsi:type="Before">
                     <operand xsi:type="End">
                        <operand name="ChoiceToIntervalOfDT" xsi:type="FunctionRef">
                           <operand path="effective" scope="Obs" xsi:type="Property"/>
                        </operand>
                     </operand>
                     <operand xsi:type="End">
                        <operand name="Measurement Period" xsi:type="ParameterRef"/>
                     </operand>
                  </operand>
               </where>
            </operand>
         </expression>
      </def>
      <def name="Is Lacking Right Breast" context="Patient" accessLevel="Public">
         <expression xsi:type="Or">
            <operand xsi:type="Or">
               <operand name="Is Unilateral Mastectomy With Right Modifier" xsi:type="ExpressionRef"/>
               <operand name="Is Unilateral Mastectomy Right" xsi:type="ExpressionRef"/>
            </operand>
            <operand name="Is Absence Of Right Breast" xsi:type="ExpressionRef"/>
         </expression>
      </def>
      <def name="Denominator Exclusion" context="Patient" accessLevel="Public">
         <expression xsi:type="And">
            <operand name="Initial Population" xsi:type="ExpressionRef"/>
            <operand xsi:type="Or">
               <operand name="Is Lacking Both Breasts" xsi:type="ExpressionRef"/>
               <operand xsi:type="And">
                  <operand name="Is Lacking Left Breast" xsi:type="ExpressionRef"/>
                  <operand name="Is Lacking Right Breast" xsi:type="ExpressionRef"/>
               </operand>
            </operand>
         </expression>
      </def>
      <def name="PeriodToIntervalOfDT" context="Patient" accessLevel="Public" xsi:type="FunctionDef">
         <expression lowClosed="true" highClosed="true" xsi:type="Interval">
            <low path="value" xsi:type="Property">
               <source path="start" xsi:type="Property">
                  <source name="value" xsi:type="OperandRef"/>
               </source>
            </low>
            <high path="value" xsi:type="Property">
               <source path="end" xsi:type="Property">
                  <source name="value" xsi:type="OperandRef"/>
               </source>
            </high>
         </expression>
         <operand name="value">
            <operandTypeSpecifier name="fhir:Period" xsi:type="NamedTypeSpecifier"/>
         </operand>
      </def>
      <def name="CodingToCode" context="Patient" accessLevel="Public" xsi:type="FunctionDef">
         <expression classType="t:Code" xsi:type="Instance">
            <element name="code">
               <value path="value" xsi:type="Property">
                  <source path="code" xsi:type="Property">
                     <source name="coding" xsi:type="OperandRef"/>
                  </source>
               </value>
            </element>
            <element name="system">
               <value path="value" xsi:type="Property">
                  <source path="system" xsi:type="Property">
                     <source name="coding" xsi:type="OperandRef"/>
                  </source>
               </value>
            </element>
            <element name="version">
               <value path="value" xsi:type="Property">
                  <source path="version" xsi:type="Property">
                     <source name="coding" xsi:type="OperandRef"/>
                  </source>
               </value>
            </element>
            <element name="display">
               <value path="value" xsi:type="Property">
                  <source path="display" xsi:type="Property">
                     <source name="coding" xsi:type="OperandRef"/>
                  </source>
               </value>
            </element>
         </expression>
         <operand name="coding">
            <operandTypeSpecifier name="fhir:Coding" xsi:type="NamedTypeSpecifier"/>
         </operand>
      </def>
   </statements>
</library>


